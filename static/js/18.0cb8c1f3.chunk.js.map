{"version":3,"sources":["shared/components/CardChart.js"],"names":["labelFormatter","label","format","Date","calculateMin","data","yKey","factor","max","Number","POSITIVE_INFINITY","forEach","element","Math","round","itemHeight","options","withStyles","theme","cardContentInner","marginTop","spacing","withTheme","props","color","title","classes","height","_useState","useState","_useState2","_slicedToArray","anchorEl","setAnchorEl","_useState3","_useState4","selectedOption","setSelectedOption","handleClick","useCallback","event","currentTarget","formatter","value","getSubtitle","Error","processData","seconds","minSeconds","arr","i","length","timestamp","unshift","handleClose","selectOption","isOpen","Boolean","React","createElement","Card","Box","pt","px","pb","display","justifyContent","Typography","variant","IconButton","aria-label","aria-owns","undefined","aria-haspopup","onClick","size","MoreVertIcon","Menu","id","open","onClose","PaperProps","style","maxHeight","width","disableScrollLock","map","option","MenuItem","key","selected","name","CardContent","className","ResponsiveContainer","AreaChart","type","XAxis","dataKey","domain","hide","YAxis","Area","stroke","fill","Tooltip","cursor","contentStyle","border","padding","borderRadius","shape","boxShadow","shadows","labelStyle","typography","body1","itemStyle","fontSize","letterSpacing","fontFamily","lineHeight","fontWeight"],"mappings":"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","file":"static/js/18.0cb8c1f3.chunk.js","sourcesContent":["import React, { useState, useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  AreaChart,\r\n  Area,\r\n  XAxis,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n  YAxis,\r\n} from \"recharts\";\r\nimport format from \"date-fns/format\";\r\nimport { Card, CardContent, Typography, IconButton, Menu, MenuItem, Box } from \"@mui/material\";\r\nimport withStyles from '@mui/styles/withStyles';\r\nimport MoreVertIcon from \"@mui/icons-material/MoreVert\";\r\n\r\nconst styles = (theme) => ({\r\n  cardContentInner: {\r\n    marginTop: theme.spacing(-4),\r\n  },\r\n});\r\n\r\nfunction labelFormatter(label) {\r\n  return format(new Date(label * 1000), \"MMMM d, p yyyy\");\r\n}\r\n\r\nfunction calculateMin(data, yKey, factor) {\r\n  let max = Number.POSITIVE_INFINITY;\r\n  data.forEach((element) => {\r\n    if (max > element[yKey]) {\r\n      max = element[yKey];\r\n    }\r\n  });\r\n  return Math.round(max - max * factor);\r\n}\r\n\r\nconst itemHeight = 216;\r\nconst options = [\"1 Week\", \"1 Month\", \"6 Months\"];\r\n\r\nfunction CardChart(props) {\r\n  const { color, data, title, classes, theme, height } = props;\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [selectedOption, setSelectedOption] = useState(\"1 Month\");\r\n\r\n  const handleClick = useCallback(\r\n    (event) => {\r\n      setAnchorEl(event.currentTarget);\r\n    },\r\n    [setAnchorEl]\r\n  );\r\n\r\n  const formatter = useCallback(\r\n    (value) => {\r\n      return [value, title];\r\n    },\r\n    [title]\r\n  );\r\n\r\n  const getSubtitle = useCallback(() => {\r\n    switch (selectedOption) {\r\n      case \"1 Week\":\r\n        return \"Last week\";\r\n      case \"1 Month\":\r\n        return \"Last month\";\r\n      case \"6 Months\":\r\n        return \"Last 6 months\";\r\n      default:\r\n        throw new Error(\"No branch selected in switch-statement\");\r\n    }\r\n  }, [selectedOption]);\r\n\r\n  const processData = useCallback(() => {\r\n    let seconds;\r\n    switch (selectedOption) {\r\n      case \"1 Week\":\r\n        seconds = 60 * 60 * 24 * 7;\r\n        break;\r\n      case \"1 Month\":\r\n        seconds = 60 * 60 * 24 * 31;\r\n        break;\r\n      case \"6 Months\":\r\n        seconds = 60 * 60 * 24 * 31 * 6;\r\n        break;\r\n      default:\r\n        throw new Error(\"No branch selected in switch-statement\");\r\n    }\r\n    const minSeconds = new Date() / 1000 - seconds;\r\n    const arr = [];\r\n    for (let i = 0; i < data.length; i += 1) {\r\n      if (minSeconds < data[i].timestamp) {\r\n        arr.unshift(data[i]);\r\n      }\r\n    }\r\n    return arr;\r\n  }, [data, selectedOption]);\r\n\r\n  const handleClose = useCallback(() => {\r\n    setAnchorEl(null);\r\n  }, [setAnchorEl]);\r\n\r\n  const selectOption = useCallback(\r\n    (selectedOption) => {\r\n      setSelectedOption(selectedOption);\r\n      handleClose();\r\n    },\r\n    [setSelectedOption, handleClose]\r\n  );\r\n\r\n  const isOpen = Boolean(anchorEl);\r\n  return (\r\n    <Card>\r\n      <Box pt={2} px={2} pb={4}>\r\n        <Box display=\"flex\" justifyContent=\"space-between\">\r\n          <div>\r\n            <Typography variant=\"subtitle1\">{title}</Typography>\r\n            <Typography variant=\"body2\" color=\"textSecondary\">\r\n              {getSubtitle()}\r\n            </Typography>\r\n          </div>\r\n          <div>\r\n            <IconButton\r\n              aria-label=\"More\"\r\n              aria-owns={isOpen ? \"long-menu\" : undefined}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleClick}\r\n              size=\"large\">\r\n              <MoreVertIcon />\r\n            </IconButton>\r\n            <Menu\r\n              id=\"long-menu\"\r\n              anchorEl={anchorEl}\r\n              open={isOpen}\r\n              onClose={handleClose}\r\n              PaperProps={{\r\n                style: {\r\n                  maxHeight: itemHeight,\r\n                  width: 200,\r\n                },\r\n              }}\r\n              disableScrollLock\r\n            >\r\n              {options.map((option) => (\r\n                <MenuItem\r\n                  key={option}\r\n                  selected={option === selectedOption}\r\n                  onClick={() => {\r\n                    selectOption(option);\r\n                  }}\r\n                  name={option}\r\n                >\r\n                  {option}\r\n                </MenuItem>\r\n              ))}\r\n            </Menu>\r\n          </div>\r\n        </Box>\r\n      </Box>\r\n      <CardContent>\r\n        <Box className={classes.cardContentInner} height={height}>\r\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n            <AreaChart data={processData()} type=\"number\">\r\n              <XAxis\r\n                dataKey=\"timestamp\"\r\n                type=\"number\"\r\n                domain={[\"dataMin\", \"dataMax\"]}\r\n                hide\r\n              />\r\n              <YAxis\r\n                domain={[calculateMin(data, \"value\", 0.05), \"dataMax\"]}\r\n                hide\r\n              />\r\n              <Area\r\n                type=\"monotone\"\r\n                dataKey=\"value\"\r\n                stroke={color}\r\n                fill={color}\r\n              />\r\n              <Tooltip\r\n                labelFormatter={labelFormatter}\r\n                formatter={formatter}\r\n                cursor={false}\r\n                contentStyle={{\r\n                  border: \"none\",\r\n                  padding: theme.spacing(1),\r\n                  borderRadius: theme.shape.borderRadius,\r\n                  boxShadow: theme.shadows[1],\r\n                }}\r\n                labelStyle={theme.typography.body1}\r\n                itemStyle={{\r\n                  fontSize: theme.typography.body1.fontSize,\r\n                  letterSpacing: theme.typography.body1.letterSpacing,\r\n                  fontFamily: theme.typography.body1.fontFamily,\r\n                  lineHeight: theme.typography.body1.lineHeight,\r\n                  fontWeight: theme.typography.body1.fontWeight,\r\n                }}\r\n              />\r\n            </AreaChart>\r\n          </ResponsiveContainer>\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nCardChart.propTypes = {\r\n  color: PropTypes.string.isRequired,\r\n  data: PropTypes.array.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  classes: PropTypes.object.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n  height: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(CardChart);\r\n"],"sourceRoot":""}